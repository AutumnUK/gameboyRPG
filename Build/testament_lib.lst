                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module testament_lib
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _gotogxy
                                     12 	.globl _gprintf
                                     13 	.globl _joypad
                                     14 	.globl _delay
                                     15 	.globl _clearText
                                     16 	.globl _battleWindowUpdate
                                     17 	.globl _writeText
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                                     49 ;src\testament_lib.c:9: void clearText( void ) {
                                     50 ;	---------------------------------
                                     51 ; Function clearText
                                     52 ; ---------------------------------
    00000000                         53 _clearText::
                                     54 ;src\testament_lib.c:10: gotogxy( 0 , TOPROW);
    00000000 21 00 0F         [12]   55 	ld	hl, #0xf00
    00000003 E5               [16]   56 	push	hl
    00000004 CDr00r00         [24]   57 	call	_gotogxy
    00000007 E1               [12]   58 	pop	hl
                                     59 ;src\testament_lib.c:11: for ( uint8_t i = 0; i < BOXLEN; i++ ) {
    00000008 0E 00            [ 8]   60 	ld	c, #0x00
    0000000A                         61 00103$:
    0000000A 79               [ 4]   62 	ld	a, c
    0000000B D6 3C            [ 8]   63 	sub	a, #0x3c
    0000000D D0               [20]   64 	ret	NC
                                     65 ;src\testament_lib.c:12: gprintf( " " );
    0000000E C5               [16]   66 	push	bc
    0000000F 11r1Br00         [12]   67 	ld	de, #___str_0
    00000012 D5               [16]   68 	push	de
    00000013 CDr00r00         [24]   69 	call	_gprintf
    00000016 E1               [12]   70 	pop	hl
    00000017 C1               [12]   71 	pop	bc
                                     72 ;src\testament_lib.c:11: for ( uint8_t i = 0; i < BOXLEN; i++ ) {
    00000018 0C               [ 4]   73 	inc	c
                                     74 ;src\testament_lib.c:14: }
    00000019 18 EF            [12]   75 	jr	00103$
    0000001B                         76 ___str_0:
    0000001B 20                      77 	.ascii " "
    0000001C 00                      78 	.db 0x00
                                     79 ;src\testament_lib.c:16: void battleWindowUpdate( uint16_t hp ) {
                                     80 ;	---------------------------------
                                     81 ; Function battleWindowUpdate
                                     82 ; ---------------------------------
    0000001D                         83 _battleWindowUpdate::
                                     84 ;src\testament_lib.c:17: gotogxy( 0 , 15 );  gprintf( "HP : %d" , hp );
    0000001D D5               [16]   85 	push	de
    0000001E 21 00 0F         [12]   86 	ld	hl, #0xf00
    00000021 E5               [16]   87 	push	hl
    00000022 CDr00r00         [24]   88 	call	_gotogxy
    00000025 E1               [12]   89 	pop	hl
    00000026 11r30r00         [12]   90 	ld	de, #___str_1
    00000029 D5               [16]   91 	push	de
    0000002A CDr00r00         [24]   92 	call	_gprintf
    0000002D E8 04            [16]   93 	add	sp, #4
                                     94 ;src\testament_lib.c:18: }
    0000002F C9               [16]   95 	ret
    00000030                         96 ___str_1:
    00000030 48 50 20 3A 20 25 64    97 	.ascii "HP : %d"
    00000037 00                      98 	.db 0x00
                                     99 ;src\testament_lib.c:22: uint8_t writeText( char i[20] , char j[20] , char k[18] ) {
                                    100 ;	---------------------------------
                                    101 ; Function writeText
                                    102 ; ---------------------------------
    00000038                        103 _writeText::
                                    104 ;src\testament_lib.c:23: clearText();
    00000038 C5               [16]  105 	push	bc
    00000039 D5               [16]  106 	push	de
    0000003A CDr00r00         [24]  107 	call	_clearText
    0000003D 21 00 0F         [12]  108 	ld	hl, #0xf00
    00000040 E5               [16]  109 	push	hl
    00000041 CDr00r00         [24]  110 	call	_gotogxy
    00000044 E1               [12]  111 	pop	hl
    00000045 11r94r00         [12]  112 	ld	de, #___str_2
    00000048 D5               [16]  113 	push	de
    00000049 CDr00r00         [24]  114 	call	_gprintf
    0000004C E8 04            [16]  115 	add	sp, #4
    0000004E 21 00 10         [12]  116 	ld	hl, #0x1000
    00000051 E5               [16]  117 	push	hl
    00000052 CDr00r00         [24]  118 	call	_gotogxy
    00000055 E1               [12]  119 	pop	hl
    00000056 11r94r00         [12]  120 	ld	de, #___str_2
    00000059 D5               [16]  121 	push	de
    0000005A CDr00r00         [24]  122 	call	_gprintf
    0000005D E8 04            [16]  123 	add	sp, #4
                                    124 ;src\testament_lib.c:32: gotogxy( 0 , BOTROW );
    0000005F 3E 11            [ 8]  125 	ld	a, #0x11
    00000061 F5               [16]  126 	push	af
    00000062 33               [ 8]  127 	inc	sp
    00000063 AF               [ 4]  128 	xor	a, a
    00000064 F5               [16]  129 	push	af
    00000065 33               [ 8]  130 	inc	sp
    00000066 CDr00r00         [24]  131 	call	_gotogxy
    00000069 E1               [12]  132 	pop	hl
                                    133 ;src\testament_lib.c:33: gprintf( "%s" , k );
    0000006A F8 02            [12]  134 	ldhl	sp,	#2
    0000006C 5E               [ 8]  135 	ld	e, (hl)
    0000006D 23               [ 8]  136 	inc	hl
    0000006E 56               [ 8]  137 	ld	d, (hl)
    0000006F D5               [16]  138 	push	de
    00000070 11r94r00         [12]  139 	ld	de, #___str_2
    00000073 D5               [16]  140 	push	de
    00000074 CDr00r00         [24]  141 	call	_gprintf
    00000077 E8 04            [16]  142 	add	sp, #4
                                    143 ;src\testament_lib.c:35: while ( wait = 1 ) {
    00000079                        144 00103$:
                                    145 ;src\testament_lib.c:36: delay(200);
    00000079 11 C8 00         [12]  146 	ld	de, #0x00c8
    0000007C CDr00r00         [24]  147 	call	_delay
                                    148 ;src\testament_lib.c:37: if ( joypad() & J_A ) {
    0000007F CDr00r00         [24]  149 	call	_joypad
    00000082 CB 67            [ 8]  150 	bit	4, a
    00000084 28 F3            [12]  151 	jr	Z, 00103$
                                    152 ;src\testament_lib.c:38: delay(200);
    00000086 11 C8 00         [12]  153 	ld	de, #0x00c8
    00000089 CDr00r00         [24]  154 	call	_delay
                                    155 ;src\testament_lib.c:39: clearText();
    0000008C CDr00r00         [24]  156 	call	_clearText
                                    157 ;src\testament_lib.c:40: return 1;
    0000008F 3E 01            [ 8]  158 	ld	a, #0x01
                                    159 ;src\testament_lib.c:43: }
    00000091 E1               [12]  160 	pop	hl
    00000092 C1               [12]  161 	pop	bc
    00000093 E9               [ 4]  162 	jp	(hl)
    00000094                        163 ___str_2:
    00000094 25 73                  164 	.ascii "%s"
    00000096 00                     165 	.db 0x00
                                    166 	.area _CODE
                                    167 	.area _INITIALIZER
                                    168 	.area _CABS (ABS)
