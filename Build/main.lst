                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _clear
                                     13 	.globl _set_sprite_data
                                     14 	.globl _get_bkg_tile_xy
                                     15 	.globl _set_bkg_tile_xy
                                     16 	.globl _set_bkg_data
                                     17 	.globl _vsync
                                     18 	.globl _joypad
                                     19 	.globl _TestTiles
                                     20 ;--------------------------------------------------------
                                     21 ; special function registers
                                     22 ;--------------------------------------------------------
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _DATA
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _INITIALIZED
    00000000                         31 _TestTiles::
    00000000                         32 	.ds 80
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DABS (ABS)
                                     37 ;--------------------------------------------------------
                                     38 ; global & static initialisations
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _GSINIT
                                     42 	.area _GSFINAL
                                     43 	.area _GSINIT
                                     44 ;--------------------------------------------------------
                                     45 ; Home
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _HOME
                                     49 ;--------------------------------------------------------
                                     50 ; code
                                     51 ;--------------------------------------------------------
                                     52 	.area _CODE
                                     53 ;src\main.c:7: void clear(void) {
                                     54 ;	---------------------------------
                                     55 ; Function clear
                                     56 ; ---------------------------------
    00000000                         57 _clear::
                                     58 ;src\main.c:9: for (int i = 0; i < 18; i++) {
    00000000 0E 00            [ 8]   59 	ld	c, #0x00
    00000002                         60 00107$:
    00000002 79               [ 4]   61 	ld	a, c
    00000003 D6 12            [ 8]   62 	sub	a, #0x12
    00000005 D0               [20]   63 	ret	NC
                                     64 ;src\main.c:10: for (int j = 0; j < 20; j++) {
    00000006 06 00            [ 8]   65 	ld	b, #0x00
    00000008                         66 00104$:
    00000008 78               [ 4]   67 	ld	a, b
    00000009 D6 14            [ 8]   68 	sub	a, #0x14
    0000000B 30 0E            [12]   69 	jr	NC, 00108$
                                     70 ;src\main.c:11: set_bkg_tile_xy(j,i,0);
    0000000D 59               [ 4]   71 	ld	e, c
    0000000E 50               [ 4]   72 	ld	d, b
    0000000F C5               [16]   73 	push	bc
    00000010 AF               [ 4]   74 	xor	a, a
    00000011 F5               [16]   75 	push	af
    00000012 33               [ 8]   76 	inc	sp
    00000013 7A               [ 4]   77 	ld	a, d
    00000014 CDr00r00         [24]   78 	call	_set_bkg_tile_xy
    00000017 C1               [12]   79 	pop	bc
                                     80 ;src\main.c:10: for (int j = 0; j < 20; j++) {
    00000018 04               [ 4]   81 	inc	b
    00000019 18 ED            [12]   82 	jr	00104$
    0000001B                         83 00108$:
                                     84 ;src\main.c:9: for (int i = 0; i < 18; i++) {
    0000001B 0C               [ 4]   85 	inc	c
                                     86 ;src\main.c:17: }
    0000001C 18 E4            [12]   87 	jr	00107$
                                     88 ;src\main.c:19: void main(void) {    
                                     89 ;	---------------------------------
                                     90 ; Function main
                                     91 ; ---------------------------------
    0000001E                         92 _main::
    0000001E E8 F2            [16]   93 	add	sp, #-14
                                     94 ;src\main.c:20: SHOW_SPRITES;
    00000020 F0r00            [12]   95 	ldh	a, (_LCDC_REG + 0)
    00000022 F6 02            [ 8]   96 	or	a, #0x02
    00000024 E0r00            [12]   97 	ldh	(_LCDC_REG + 0), a
                                     98 ;src\main.c:21: SHOW_BKG;
    00000026 F0r00            [12]   99 	ldh	a, (_LCDC_REG + 0)
    00000028 F6 01            [ 8]  100 	or	a, #0x01
    0000002A E0r00            [12]  101 	ldh	(_LCDC_REG + 0), a
                                    102 ;src\main.c:22: DISPLAY_ON;    
    0000002C F0r00            [12]  103 	ldh	a, (_LCDC_REG + 0)
    0000002E F6 80            [ 8]  104 	or	a, #0x80
    00000030 E0r00            [12]  105 	ldh	(_LCDC_REG + 0), a
                                    106 ;src\main.c:23: set_bkg_data(0,4,TestTiles);
    00000032 01r00r00         [12]  107 	ld	bc, #_TestTiles+0
    00000035 C5               [16]  108 	push	bc
    00000036 21 00 04         [12]  109 	ld	hl, #0x400
    00000039 E5               [16]  110 	push	hl
    0000003A CDr00r00         [24]  111 	call	_set_bkg_data
    0000003D E8 04            [16]  112 	add	sp, #4
                                    113 ;src\main.c:24: set_sprite_data(0,4,TestTiles);
    0000003F C5               [16]  114 	push	bc
    00000040 21 00 04         [12]  115 	ld	hl, #0x400
    00000043 E5               [16]  116 	push	hl
    00000044 CDr00r00         [24]  117 	call	_set_sprite_data
    00000047 E8 04            [16]  118 	add	sp, #4
                                    119 ;src\../Tools/GBDK/include/gb/gb.h:1875: shadow_OAM[nb].tile=tile;
    00000049 21r02r00         [12]  120 	ld	hl, #(_shadow_OAM + 2)
    0000004C 36 01            [12]  121 	ld	(hl), #0x01
    0000004E 21r06r00         [12]  122 	ld	hl, #(_shadow_OAM + 6)
    00000051 36 01            [12]  123 	ld	(hl), #0x01
    00000053 21r0Ar00         [12]  124 	ld	hl, #(_shadow_OAM + 10)
    00000056 36 01            [12]  125 	ld	(hl), #0x01
    00000058 21r0Er00         [12]  126 	ld	hl, #(_shadow_OAM + 14)
    0000005B 36 01            [12]  127 	ld	(hl), #0x01
                                    128 ;src\main.c:29: clear();
    0000005D CDr00r00         [24]  129 	call	_clear
                                    130 ;src\main.c:39: camera_x = 10;
    00000060 F8 08            [12]  131 	ldhl	sp,	#8
    00000062 3E 0A            [ 8]  132 	ld	a, #0x0a
    00000064 22               [ 8]  133 	ld	(hl+), a
    00000065 AF               [ 4]  134 	xor	a, a
    00000066 77               [ 8]  135 	ld	(hl), a
                                    136 ;src\main.c:40: camera_y = 10;
    00000067 01 0A 00         [12]  137 	ld	bc, #0x000a
                                    138 ;src\main.c:41: vsync();
    0000006A CDr00r00         [24]  139 	call	_vsync
                                    140 ;src\main.c:42: while (1) {
    0000006D                        141 00122$:
                                    142 ;src\main.c:43: vsync();
    0000006D CDr00r00         [24]  143 	call	_vsync
                                    144 ;src\../Tools/GBDK/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    00000070 21r00r00         [12]  145 	ld	hl, #_shadow_OAM
                                    146 ;src\../Tools/GBDK/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    00000073 3E 48            [ 8]  147 	ld	a, #0x48
    00000075 22               [ 8]  148 	ld	(hl+), a
    00000076 36 50            [12]  149 	ld	(hl), #0x50
                                    150 ;src\../Tools/GBDK/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    00000078 21r04r00         [12]  151 	ld	hl, #(_shadow_OAM + 4)
                                    152 ;src\../Tools/GBDK/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    0000007B 3E 48            [ 8]  153 	ld	a, #0x48
    0000007D 22               [ 8]  154 	ld	(hl+), a
    0000007E 36 58            [12]  155 	ld	(hl), #0x58
                                    156 ;src\../Tools/GBDK/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    00000080 21r08r00         [12]  157 	ld	hl, #(_shadow_OAM + 8)
                                    158 ;src\../Tools/GBDK/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    00000083 3E 50            [ 8]  159 	ld	a, #0x50
    00000085 22               [ 8]  160 	ld	(hl+), a
    00000086 36 50            [12]  161 	ld	(hl), #0x50
                                    162 ;src\../Tools/GBDK/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    00000088 21r0Cr00         [12]  163 	ld	hl, #(_shadow_OAM + 12)
                                    164 ;src\../Tools/GBDK/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    0000008B 3E 50            [ 8]  165 	ld	a, #0x50
    0000008D 22               [ 8]  166 	ld	(hl+), a
    0000008E 36 58            [12]  167 	ld	(hl), #0x58
                                    168 ;src\main.c:50: for (int i = camera_y; i < 18 + camera_y; i++) {
    00000090 F8 08            [12]  169 	ldhl	sp,#8
    00000092 2A               [ 8]  170 	ld	a, (hl+)
    00000093 5F               [ 4]  171 	ld	e, a
    00000094 56               [ 8]  172 	ld	d, (hl)
    00000095 21 14 00         [12]  173 	ld	hl, #0x0014
    00000098 19               [ 8]  174 	add	hl, de
    00000099 33               [ 8]  175 	inc	sp
    0000009A 33               [ 8]  176 	inc	sp
    0000009B E5               [16]  177 	push	hl
    0000009C 21 12 00         [12]  178 	ld	hl, #0x0012
    0000009F 09               [ 8]  179 	add	hl, bc
    000000A0 E5               [16]  180 	push	hl
    000000A1 7D               [ 4]  181 	ld	a, l
    000000A2 F8 04            [12]  182 	ldhl	sp,	#4
    000000A4 77               [ 8]  183 	ld	(hl), a
    000000A5 E1               [12]  184 	pop	hl
    000000A6 7C               [ 4]  185 	ld	a, h
    000000A7 F8 03            [12]  186 	ldhl	sp,	#3
    000000A9 77               [ 8]  187 	ld	(hl), a
    000000AA F8 0A            [12]  188 	ldhl	sp,	#10
    000000AC 79               [ 4]  189 	ld	a, c
    000000AD 22               [ 8]  190 	ld	(hl+), a
    000000AE 70               [ 8]  191 	ld	(hl), b
    000000AF                        192 00136$:
    000000AF F8 0A            [12]  193 	ldhl	sp,	#10
    000000B1 5D               [ 4]  194 	ld	e, l
    000000B2 54               [ 4]  195 	ld	d, h
    000000B3 F8 02            [12]  196 	ldhl	sp,	#2
    000000B5 1A               [ 8]  197 	ld	a, (de)
    000000B6 13               [ 8]  198 	inc	de
    000000B7 96               [ 8]  199 	sub	a, (hl)
    000000B8 23               [ 8]  200 	inc	hl
    000000B9 1A               [ 8]  201 	ld	a, (de)
    000000BA 9E               [ 8]  202 	sbc	a, (hl)
    000000BB 1A               [ 8]  203 	ld	a, (de)
    000000BC 57               [ 4]  204 	ld	d, a
    000000BD CB 7E            [12]  205 	bit	7, (hl)
    000000BF 28 07            [12]  206 	jr	Z, 00235$
    000000C1 CB 7A            [ 8]  207 	bit	7, d
    000000C3 20 08            [12]  208 	jr	NZ, 00236$
    000000C5 BF               [ 4]  209 	cp	a, a
    000000C6 18 05            [12]  210 	jr	00236$
    000000C8                        211 00235$:
    000000C8 CB 7A            [ 8]  212 	bit	7, d
    000000CA 28 01            [12]  213 	jr	Z, 00236$
    000000CC 37               [ 4]  214 	scf
    000000CD                        215 00236$:
    000000CD D2r62r01         [16]  216 	jp	NC, 00102$
                                    217 ;src\main.c:52: for (int j = camera_x; j < 20 + camera_x; j++) {
    000000D0 F8 0A            [12]  218 	ldhl	sp,#10
    000000D2 2A               [ 8]  219 	ld	a, (hl+)
    000000D3 5F               [ 4]  220 	ld	e, a
    000000D4 56               [ 8]  221 	ld	d, (hl)
    000000D5 6B               [ 4]  222 	ld	l, e
    000000D6 62               [ 4]  223 	ld	h, d
    000000D7 29               [ 8]  224 	add	hl, hl
    000000D8 19               [ 8]  225 	add	hl, de
    000000D9 29               [ 8]  226 	add	hl, hl
    000000DA 19               [ 8]  227 	add	hl, de
    000000DB 29               [ 8]  228 	add	hl, hl
    000000DC 19               [ 8]  229 	add	hl, de
    000000DD 29               [ 8]  230 	add	hl, hl
    000000DE 29               [ 8]  231 	add	hl, hl
    000000DF E5               [16]  232 	push	hl
    000000E0 7D               [ 4]  233 	ld	a, l
    000000E1 F8 0E            [12]  234 	ldhl	sp,	#14
    000000E3 77               [ 8]  235 	ld	(hl), a
    000000E4 E1               [12]  236 	pop	hl
    000000E5 7C               [ 4]  237 	ld	a, h
    000000E6 F8 0D            [12]  238 	ldhl	sp,	#13
    000000E8 32               [ 8]  239 	ld	(hl-), a
    000000E9 2A               [ 8]  240 	ld	a, (hl+)
    000000EA 5F               [ 4]  241 	ld	e, a
    000000EB 56               [ 8]  242 	ld	d, (hl)
    000000EC 21r00r00         [12]  243 	ld	hl, #_map
    000000EF 19               [ 8]  244 	add	hl, de
    000000F0 E5               [16]  245 	push	hl
    000000F1 7D               [ 4]  246 	ld	a, l
    000000F2 F8 06            [12]  247 	ldhl	sp,	#6
    000000F4 77               [ 8]  248 	ld	(hl), a
    000000F5 E1               [12]  249 	pop	hl
    000000F6 7C               [ 4]  250 	ld	a, h
    000000F7 F8 05            [12]  251 	ldhl	sp,	#5
    000000F9 77               [ 8]  252 	ld	(hl), a
    000000FA F8 08            [12]  253 	ldhl	sp,	#8
    000000FC 7E               [ 8]  254 	ld	a, (hl)
    000000FD F8 0C            [12]  255 	ldhl	sp,	#12
    000000FF 77               [ 8]  256 	ld	(hl), a
    00000100 F8 09            [12]  257 	ldhl	sp,	#9
    00000102 7E               [ 8]  258 	ld	a, (hl)
    00000103 F8 0D            [12]  259 	ldhl	sp,	#13
    00000105 77               [ 8]  260 	ld	(hl), a
    00000106                        261 00133$:
    00000106 F8 0C            [12]  262 	ldhl	sp,	#12
    00000108 5D               [ 4]  263 	ld	e, l
    00000109 54               [ 4]  264 	ld	d, h
    0000010A F8 00            [12]  265 	ldhl	sp,	#0
    0000010C 1A               [ 8]  266 	ld	a, (de)
    0000010D 13               [ 8]  267 	inc	de
    0000010E 96               [ 8]  268 	sub	a, (hl)
    0000010F 23               [ 8]  269 	inc	hl
    00000110 1A               [ 8]  270 	ld	a, (de)
    00000111 9E               [ 8]  271 	sbc	a, (hl)
    00000112 1A               [ 8]  272 	ld	a, (de)
    00000113 57               [ 4]  273 	ld	d, a
    00000114 CB 7E            [12]  274 	bit	7, (hl)
    00000116 28 07            [12]  275 	jr	Z, 00237$
    00000118 CB 7A            [ 8]  276 	bit	7, d
    0000011A 20 08            [12]  277 	jr	NZ, 00238$
    0000011C BF               [ 4]  278 	cp	a, a
    0000011D 18 05            [12]  279 	jr	00238$
    0000011F                        280 00237$:
    0000011F CB 7A            [ 8]  281 	bit	7, d
    00000121 28 01            [12]  282 	jr	Z, 00238$
    00000123 37               [ 4]  283 	scf
    00000124                        284 00238$:
    00000124 30 31            [12]  285 	jr	NC, 00137$
                                    286 ;src\main.c:54: set_bkg_tile_xy(j - camera_x,i - camera_y,map[i][j]);
    00000126 F8 04            [12]  287 	ldhl	sp,#4
    00000128 2A               [ 8]  288 	ld	a, (hl+)
    00000129 5F               [ 4]  289 	ld	e, a
    0000012A 56               [ 8]  290 	ld	d, (hl)
    0000012B F8 0C            [12]  291 	ldhl	sp,	#12
    0000012D 2A               [ 8]  292 	ld	a,	(hl+)
    0000012E 66               [ 8]  293 	ld	h, (hl)
    0000012F 6F               [ 4]  294 	ld	l, a
    00000130 19               [ 8]  295 	add	hl, de
    00000131 5D               [ 4]  296 	ld	e, l
    00000132 54               [ 4]  297 	ld	d, h
    00000133 1A               [ 8]  298 	ld	a, (de)
    00000134 F8 06            [12]  299 	ldhl	sp,	#6
    00000136 77               [ 8]  300 	ld	(hl), a
    00000137 F8 0A            [12]  301 	ldhl	sp,	#10
    00000139 2A               [ 8]  302 	ld	a, (hl+)
    0000013A 23               [ 8]  303 	inc	hl
    0000013B 59               [ 4]  304 	ld	e, c
    0000013C 93               [ 4]  305 	sub	a, e
    0000013D 5F               [ 4]  306 	ld	e, a
    0000013E 7E               [ 8]  307 	ld	a, (hl)
    0000013F F8 08            [12]  308 	ldhl	sp,	#8
    00000141 56               [ 8]  309 	ld	d, (hl)
    00000142 2B               [ 8]  310 	dec	hl
    00000143 92               [ 4]  311 	sub	a, d
    00000144 32               [ 8]  312 	ld	(hl-), a
    00000145 C5               [16]  313 	push	bc
    00000146 2A               [ 8]  314 	ld	a, (hl+)
    00000147 F5               [16]  315 	push	af
    00000148 33               [ 8]  316 	inc	sp
    00000149 7E               [ 8]  317 	ld	a, (hl)
    0000014A CDr00r00         [24]  318 	call	_set_bkg_tile_xy
    0000014D C1               [12]  319 	pop	bc
                                    320 ;src\main.c:52: for (int j = camera_x; j < 20 + camera_x; j++) {
    0000014E F8 0C            [12]  321 	ldhl	sp,	#12
    00000150 34               [12]  322 	inc	(hl)
    00000151 20 B3            [12]  323 	jr	NZ, 00133$
    00000153 23               [ 8]  324 	inc	hl
    00000154 34               [12]  325 	inc	(hl)
    00000155 18 AF            [12]  326 	jr	00133$
    00000157                        327 00137$:
                                    328 ;src\main.c:50: for (int i = camera_y; i < 18 + camera_y; i++) {
    00000157 F8 0A            [12]  329 	ldhl	sp,	#10
    00000159 34               [12]  330 	inc	(hl)
    0000015A C2rAFr00         [16]  331 	jp	NZ,00136$
    0000015D 23               [ 8]  332 	inc	hl
    0000015E 34               [12]  333 	inc	(hl)
    0000015F C3rAFr00         [16]  334 	jp	00136$
    00000162                        335 00102$:
                                    336 ;src\main.c:59: if (joypad() & J_LEFT)  { 
    00000162 CDr00r00         [24]  337 	call	_joypad
    00000165 CB 4F            [ 8]  338 	bit	1, a
    00000167 28 19            [12]  339 	jr	Z, 00106$
                                    340 ;src\main.c:60: if ( get_bkg_tile_xy( 8,8 ) != 0x01) {
    00000169 3E 08            [ 8]  341 	ld	a, #0x08
    0000016B F5               [16]  342 	push	af
    0000016C 33               [ 8]  343 	inc	sp
    0000016D 3E 08            [ 8]  344 	ld	a, #0x08
    0000016F F5               [16]  345 	push	af
    00000170 33               [ 8]  346 	inc	sp
    00000171 CDr00r00         [24]  347 	call	_get_bkg_tile_xy
    00000174 E1               [12]  348 	pop	hl
    00000175 1D               [ 4]  349 	dec	e
    00000176 28 0A            [12]  350 	jr	Z, 00106$
                                    351 ;src\main.c:61: moving = 1; camera_x -=1; moving = 0; 
    00000178 F8 08            [12]  352 	ldhl	sp,#8
    0000017A 5E               [ 8]  353 	ld	e, (hl)
    0000017B 23               [ 8]  354 	inc	hl
    0000017C 56               [ 8]  355 	ld	d, (hl)
    0000017D 2B               [ 8]  356 	dec	hl
    0000017E 1B               [ 8]  357 	dec	de
    0000017F 73               [ 8]  358 	ld	(hl), e
    00000180 23               [ 8]  359 	inc	hl
    00000181 72               [ 8]  360 	ld	(hl), d
    00000182                        361 00106$:
                                    362 ;src\main.c:65: if (joypad() & J_RIGHT) { 
    00000182 CDr00r00         [24]  363 	call	_joypad
    00000185 0F               [ 4]  364 	rrca
    00000186 30 16            [12]  365 	jr	NC, 00110$
                                    366 ;src\main.c:66: if ( get_bkg_tile_xy( 11,8 ) != 0x01) {
    00000188 3E 08            [ 8]  367 	ld	a, #0x08
    0000018A F5               [16]  368 	push	af
    0000018B 33               [ 8]  369 	inc	sp
    0000018C 3E 0B            [ 8]  370 	ld	a, #0x0b
    0000018E F5               [16]  371 	push	af
    0000018F 33               [ 8]  372 	inc	sp
    00000190 CDr00r00         [24]  373 	call	_get_bkg_tile_xy
    00000193 E1               [12]  374 	pop	hl
    00000194 1D               [ 4]  375 	dec	e
    00000195 28 07            [12]  376 	jr	Z, 00110$
                                    377 ;src\main.c:67: moving = 1; camera_x +=1; moving = 0; 
    00000197 F8 08            [12]  378 	ldhl	sp,	#8
    00000199 34               [12]  379 	inc	(hl)
    0000019A 20 02            [12]  380 	jr	NZ, 00245$
    0000019C 23               [ 8]  381 	inc	hl
    0000019D 34               [12]  382 	inc	(hl)
    0000019E                        383 00245$:
    0000019E                        384 00110$:
                                    385 ;src\main.c:71: if (joypad() & J_UP)    { 
    0000019E CDr00r00         [24]  386 	call	_joypad
    000001A1 CB 57            [ 8]  387 	bit	2, a
    000001A3 28 10            [12]  388 	jr	Z, 00114$
                                    389 ;src\main.c:72: if ( get_bkg_tile_xy( 9,6) != 0x01) {
    000001A5 3E 06            [ 8]  390 	ld	a, #0x06
    000001A7 F5               [16]  391 	push	af
    000001A8 33               [ 8]  392 	inc	sp
    000001A9 3E 09            [ 8]  393 	ld	a, #0x09
    000001AB F5               [16]  394 	push	af
    000001AC 33               [ 8]  395 	inc	sp
    000001AD CDr00r00         [24]  396 	call	_get_bkg_tile_xy
    000001B0 E1               [12]  397 	pop	hl
    000001B1 1D               [ 4]  398 	dec	e
    000001B2 28 01            [12]  399 	jr	Z, 00114$
                                    400 ;src\main.c:73: moving = 1; camera_y -=1; moving = 0; 
    000001B4 0B               [ 8]  401 	dec	bc
    000001B5                        402 00114$:
                                    403 ;src\main.c:77: if (joypad() & J_DOWN)  { 
    000001B5 CDr00r00         [24]  404 	call	_joypad
    000001B8 CB 5F            [ 8]  405 	bit	3, a
    000001BA CAr6Dr00         [16]  406 	jp	Z,00122$
                                    407 ;src\main.c:78: if ( get_bkg_tile_xy( 9, 9) != 0x01) {
    000001BD 21 09 09         [12]  408 	ld	hl, #0x909
    000001C0 E5               [16]  409 	push	hl
    000001C1 CDr00r00         [24]  410 	call	_get_bkg_tile_xy
    000001C4 E1               [12]  411 	pop	hl
    000001C5 1D               [ 4]  412 	dec	e
    000001C6 CAr6Dr00         [16]  413 	jp	Z,00122$
                                    414 ;src\main.c:79: moving = 1; camera_y += 1; moving = 0; 
    000001C9 03               [ 8]  415 	inc	bc
    000001CA C3r6Dr00         [16]  416 	jp	00122$
                                    417 ;src\main.c:86: }
    000001CD E8 0E            [16]  418 	add	sp, #14
    000001CF C9               [16]  419 	ret
                                    420 	.area _CODE
                                    421 	.area _INITIALIZER
    00000000                        422 __xinit__TestTiles:
    00000000 00                     423 	.db #0x00	; 0
    00000001 00                     424 	.db #0x00	; 0
    00000002 00                     425 	.db #0x00	; 0
    00000003 00                     426 	.db #0x00	; 0
    00000004 00                     427 	.db #0x00	; 0
    00000005 00                     428 	.db #0x00	; 0
    00000006 00                     429 	.db #0x00	; 0
    00000007 00                     430 	.db #0x00	; 0
    00000008 00                     431 	.db #0x00	; 0
    00000009 00                     432 	.db #0x00	; 0
    0000000A 00                     433 	.db #0x00	; 0
    0000000B 00                     434 	.db #0x00	; 0
    0000000C 00                     435 	.db #0x00	; 0
    0000000D 00                     436 	.db #0x00	; 0
    0000000E 00                     437 	.db #0x00	; 0
    0000000F 00                     438 	.db #0x00	; 0
    00000010 FF                     439 	.db #0xff	; 255
    00000011 FF                     440 	.db #0xff	; 255
    00000012 FF                     441 	.db #0xff	; 255
    00000013 FF                     442 	.db #0xff	; 255
    00000014 FF                     443 	.db #0xff	; 255
    00000015 FF                     444 	.db #0xff	; 255
    00000016 FF                     445 	.db #0xff	; 255
    00000017 FF                     446 	.db #0xff	; 255
    00000018 FF                     447 	.db #0xff	; 255
    00000019 FF                     448 	.db #0xff	; 255
    0000001A FF                     449 	.db #0xff	; 255
    0000001B FF                     450 	.db #0xff	; 255
    0000001C FF                     451 	.db #0xff	; 255
    0000001D FF                     452 	.db #0xff	; 255
    0000001E FF                     453 	.db #0xff	; 255
    0000001F FF                     454 	.db #0xff	; 255
    00000020 10                     455 	.db #0x10	; 16
    00000021 00                     456 	.db #0x00	; 0
    00000022 8A                     457 	.db #0x8a	; 138
    00000023 00                     458 	.db #0x00	; 0
    00000024 44                     459 	.db #0x44	; 68	'D'
    00000025 00                     460 	.db #0x00	; 0
    00000026 00                     461 	.db #0x00	; 0
    00000027 00                     462 	.db #0x00	; 0
    00000028 90                     463 	.db #0x90	; 144
    00000029 00                     464 	.db #0x00	; 0
    0000002A 60                     465 	.db #0x60	; 96
    0000002B 00                     466 	.db #0x00	; 0
    0000002C 08                     467 	.db #0x08	; 8
    0000002D 00                     468 	.db #0x00	; 0
    0000002E 04                     469 	.db #0x04	; 4
    0000002F 00                     470 	.db #0x00	; 0
    00000030 FF                     471 	.db #0xff	; 255
    00000031 FF                     472 	.db #0xff	; 255
    00000032 1A                     473 	.db #0x1a	; 26
    00000033 FD                     474 	.db #0xfd	; 253
    00000034 58                     475 	.db #0x58	; 88	'X'
    00000035 BF                     476 	.db #0xbf	; 191
    00000036 18                     477 	.db #0x18	; 24
    00000037 FF                     478 	.db #0xff	; 255
    00000038 EF                     479 	.db #0xef	; 239
    00000039 FF                     480 	.db #0xff	; 255
    0000003A 89                     481 	.db #0x89	; 137
    0000003B F7                     482 	.db #0xf7	; 247
    0000003C 81                     483 	.db #0x81	; 129
    0000003D FF                     484 	.db #0xff	; 255
    0000003E A3                     485 	.db #0xa3	; 163
    0000003F DD                     486 	.db #0xdd	; 221
    00000040 00                     487 	.db #0x00	; 0
    00000041 00                     488 	.db #0x00	; 0
    00000042 00                     489 	.db #0x00	; 0
    00000043 00                     490 	.db #0x00	; 0
    00000044 00                     491 	.db #0x00	; 0
    00000045 00                     492 	.db #0x00	; 0
    00000046 00                     493 	.db #0x00	; 0
    00000047 00                     494 	.db #0x00	; 0
    00000048 00                     495 	.db #0x00	; 0
    00000049 00                     496 	.db #0x00	; 0
    0000004A 00                     497 	.db #0x00	; 0
    0000004B 00                     498 	.db #0x00	; 0
    0000004C 00                     499 	.db #0x00	; 0
    0000004D 00                     500 	.db #0x00	; 0
    0000004E 00                     501 	.db #0x00	; 0
    0000004F 00                     502 	.db #0x00	; 0
                                    503 	.area _CABS (ABS)
