                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module pause
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _gotogxy
                                     12 	.globl _gprintf
                                     13 	.globl _joypad
                                     14 	.globl _pause_exit
                                     15 	.globl _pause_menu
                                     16 	.globl _pause_init
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;src\pause.c:4: void pause_exit( void ) {
                                     49 ;	---------------------------------
                                     50 ; Function pause_exit
                                     51 ; ---------------------------------
    00000000                         52 _pause_exit::
                                     53 ;src\pause.c:5: gotogxy( 0 , 0 );
    00000000 AF               [ 4]   54 	xor	a, a
    00000001 0F               [ 4]   55 	rrca
    00000002 F5               [16]   56 	push	af
    00000003 CDr00r00         [24]   57 	call	_gotogxy
    00000006 E1               [12]   58 	pop	hl
                                     59 ;src\pause.c:7: for ( uint16_t i = 0 ; i < 360 ; i ++ ) {
    00000007 01 00 00         [12]   60 	ld	bc, #0x0000
    0000000A                         61 00103$:
    0000000A 59               [ 4]   62 	ld	e, c
    0000000B 50               [ 4]   63 	ld	d, b
    0000000C 7B               [ 4]   64 	ld	a, e
    0000000D D6 68            [ 8]   65 	sub	a, #0x68
    0000000F 7A               [ 4]   66 	ld	a, d
    00000010 DE 01            [ 8]   67 	sbc	a, #0x01
    00000012 30 0D            [12]   68 	jr	NC, 00101$
                                     69 ;src\pause.c:8: gprintf( " " );
    00000014 C5               [16]   70 	push	bc
    00000015 11r28r00         [12]   71 	ld	de, #___str_0
    00000018 D5               [16]   72 	push	de
    00000019 CDr00r00         [24]   73 	call	_gprintf
    0000001C E1               [12]   74 	pop	hl
    0000001D C1               [12]   75 	pop	bc
                                     76 ;src\pause.c:7: for ( uint16_t i = 0 ; i < 360 ; i ++ ) {
    0000001E 03               [ 8]   77 	inc	bc
    0000001F 18 E9            [12]   78 	jr	00103$
    00000021                         79 00101$:
                                     80 ;src\pause.c:11: SHOW_SPRITES;
    00000021 F0r00            [12]   81 	ldh	a, (_LCDC_REG + 0)
    00000023 F6 02            [ 8]   82 	or	a, #0x02
    00000025 E0r00            [12]   83 	ldh	(_LCDC_REG + 0), a
                                     84 ;src\pause.c:12: }
    00000027 C9               [16]   85 	ret
    00000028                         86 ___str_0:
    00000028 20                      87 	.ascii " "
    00000029 00                      88 	.db 0x00
                                     89 ;src\pause.c:14: void pause_menu( void ) {
                                     90 ;	---------------------------------
                                     91 ; Function pause_menu
                                     92 ; ---------------------------------
    0000002A                         93 _pause_menu::
                                     94 ;src\pause.c:16: while( 1 ) {
    0000002A                         95 00104$:
                                     96 ;src\pause.c:17: if ( joypad() & J_B ) {
    0000002A CDr00r00         [24]   97 	call	_joypad
    0000002D CB 6F            [ 8]   98 	bit	5, a
    0000002F 28 F9            [12]   99 	jr	Z, 00104$
                                    100 ;src\pause.c:18: pause_exit();
                                    101 ;src\pause.c:19: return;
                                    102 ;src\pause.c:22: }
    00000031 C3r00r00         [16]  103 	jp	_pause_exit
                                    104 ;src\pause.c:25: void pause_init( Player * player) {
                                    105 ;	---------------------------------
                                    106 ; Function pause_init
                                    107 ; ---------------------------------
    00000034                        108 _pause_init::
    00000034 D5               [16]  109 	push	de
                                    110 ;src\pause.c:26: HIDE_SPRITES;
    00000035 F0r00            [12]  111 	ldh	a, (_LCDC_REG + 0)
    00000037 E6 FD            [ 8]  112 	and	a, #0xfd
    00000039 E0r00            [12]  113 	ldh	(_LCDC_REG + 0), a
                                    114 ;src\pause.c:28: gotogxy( 14 , 1 );
    0000003B 21 0E 01         [12]  115 	ld	hl, #0x10e
    0000003E E5               [16]  116 	push	hl
    0000003F CDr00r00         [24]  117 	call	_gotogxy
    00000042 E1               [12]  118 	pop	hl
                                    119 ;src\pause.c:29: gprintf( "PAUSE" );
    00000043 11r09r01         [12]  120 	ld	de, #___str_1
    00000046 D5               [16]  121 	push	de
    00000047 CDr00r00         [24]  122 	call	_gprintf
    0000004A E1               [12]  123 	pop	hl
                                    124 ;src\pause.c:31: gotogxy( 1 , 1 );
    0000004B 21 01 01         [12]  125 	ld	hl, #0x101
    0000004E E5               [16]  126 	push	hl
    0000004F CDr00r00         [24]  127 	call	_gotogxy
    00000052 E1               [12]  128 	pop	hl
                                    129 ;src\pause.c:32: gprintf( "LEVEL : %d", player -> level );
    00000053 D1               [12]  130 	pop	de
    00000054 D5               [16]  131 	push	de
    00000055 21 09 00         [12]  132 	ld	hl, #0x0009
    00000058 19               [ 8]  133 	add	hl, de
    00000059 4D               [ 4]  134 	ld	c, l
    0000005A 44               [ 4]  135 	ld	b, h
    0000005B 0A               [ 8]  136 	ld	a, (bc)
    0000005C 4F               [ 4]  137 	ld	c, a
    0000005D 06 00            [ 8]  138 	ld	b, #0x00
    0000005F C5               [16]  139 	push	bc
    00000060 11r0Fr01         [12]  140 	ld	de, #___str_2
    00000063 D5               [16]  141 	push	de
    00000064 CDr00r00         [24]  142 	call	_gprintf
    00000067 E8 04            [16]  143 	add	sp, #4
                                    144 ;src\pause.c:34: gotogxy( 1 , 2 );
    00000069 21 01 02         [12]  145 	ld	hl, #0x201
    0000006C E5               [16]  146 	push	hl
    0000006D CDr00r00         [24]  147 	call	_gotogxy
    00000070 E1               [12]  148 	pop	hl
                                    149 ;src\pause.c:35: gprintf( "XP %d", player -> xp);
    00000071 D1               [12]  150 	pop	de
    00000072 D5               [16]  151 	push	de
    00000073 21 0A 00         [12]  152 	ld	hl, #0x000a
    00000076 19               [ 8]  153 	add	hl, de
    00000077 2A               [ 8]  154 	ld	a, (hl+)
    00000078 4F               [ 4]  155 	ld	c, a
    00000079 46               [ 8]  156 	ld	b, (hl)
    0000007A C5               [16]  157 	push	bc
    0000007B 11r1Ar01         [12]  158 	ld	de, #___str_3
    0000007E D5               [16]  159 	push	de
    0000007F CDr00r00         [24]  160 	call	_gprintf
    00000082 E8 04            [16]  161 	add	sp, #4
                                    162 ;src\pause.c:36: gprintf( " / %d", player -> xp_for_level);
    00000084 D1               [12]  163 	pop	de
    00000085 D5               [16]  164 	push	de
    00000086 21 0C 00         [12]  165 	ld	hl, #0x000c
    00000089 19               [ 8]  166 	add	hl, de
    0000008A 2A               [ 8]  167 	ld	a, (hl+)
    0000008B 4F               [ 4]  168 	ld	c, a
    0000008C 46               [ 8]  169 	ld	b, (hl)
    0000008D C5               [16]  170 	push	bc
    0000008E 11r20r01         [12]  171 	ld	de, #___str_4
    00000091 D5               [16]  172 	push	de
    00000092 CDr00r00         [24]  173 	call	_gprintf
    00000095 E8 04            [16]  174 	add	sp, #4
                                    175 ;src\pause.c:38: gotogxy( 1 , 4 );
    00000097 21 01 04         [12]  176 	ld	hl, #0x401
    0000009A E5               [16]  177 	push	hl
    0000009B CDr00r00         [24]  178 	call	_gotogxy
    0000009E E1               [12]  179 	pop	hl
                                    180 ;src\pause.c:39: gprintf( "STATS" );
    0000009F 11r26r01         [12]  181 	ld	de, #___str_5
    000000A2 D5               [16]  182 	push	de
    000000A3 CDr00r00         [24]  183 	call	_gprintf
    000000A6 E1               [12]  184 	pop	hl
                                    185 ;src\pause.c:41: gotogxy( 1 , 5 );
    000000A7 21 01 05         [12]  186 	ld	hl, #0x501
    000000AA E5               [16]  187 	push	hl
    000000AB CDr00r00         [24]  188 	call	_gotogxy
    000000AE E1               [12]  189 	pop	hl
                                    190 ;src\pause.c:42: gprintf( "Attack   %d", player -> player_atk);
    000000AF D1               [12]  191 	pop	de
    000000B0 D5               [16]  192 	push	de
    000000B1 21 08 00         [12]  193 	ld	hl, #0x0008
    000000B4 19               [ 8]  194 	add	hl, de
    000000B5 4D               [ 4]  195 	ld	c, l
    000000B6 44               [ 4]  196 	ld	b, h
    000000B7 0A               [ 8]  197 	ld	a, (bc)
    000000B8 4F               [ 4]  198 	ld	c, a
    000000B9 06 00            [ 8]  199 	ld	b, #0x00
    000000BB C5               [16]  200 	push	bc
    000000BC 11r2Cr01         [12]  201 	ld	de, #___str_6
    000000BF D5               [16]  202 	push	de
    000000C0 CDr00r00         [24]  203 	call	_gprintf
    000000C3 E8 04            [16]  204 	add	sp, #4
                                    205 ;src\pause.c:44: gotogxy( 1 , 6 );
    000000C5 21 01 06         [12]  206 	ld	hl, #0x601
    000000C8 E5               [16]  207 	push	hl
    000000C9 CDr00r00         [24]  208 	call	_gotogxy
    000000CC E1               [12]  209 	pop	hl
                                    210 ;src\pause.c:45: gprintf( "Defence  %d", player -> defence);
    000000CD D1               [12]  211 	pop	de
    000000CE D5               [16]  212 	push	de
    000000CF 21 10 00         [12]  213 	ld	hl, #0x0010
    000000D2 19               [ 8]  214 	add	hl, de
    000000D3 4D               [ 4]  215 	ld	c, l
    000000D4 44               [ 4]  216 	ld	b, h
    000000D5 0A               [ 8]  217 	ld	a, (bc)
    000000D6 4F               [ 4]  218 	ld	c, a
    000000D7 06 00            [ 8]  219 	ld	b, #0x00
    000000D9 C5               [16]  220 	push	bc
    000000DA 11r38r01         [12]  221 	ld	de, #___str_7
    000000DD D5               [16]  222 	push	de
    000000DE CDr00r00         [24]  223 	call	_gprintf
    000000E1 E8 04            [16]  224 	add	sp, #4
                                    225 ;src\pause.c:47: gotogxy( 1 , 7 );
    000000E3 21 01 07         [12]  226 	ld	hl, #0x701
    000000E6 E5               [16]  227 	push	hl
    000000E7 CDr00r00         [24]  228 	call	_gotogxy
    000000EA E1               [12]  229 	pop	hl
                                    230 ;src\pause.c:48: gprintf( "Speed    %d", player -> player_speed);
    000000EB D1               [12]  231 	pop	de
    000000EC D5               [16]  232 	push	de
    000000ED 21 07 00         [12]  233 	ld	hl, #0x0007
    000000F0 19               [ 8]  234 	add	hl, de
    000000F1 4D               [ 4]  235 	ld	c, l
    000000F2 44               [ 4]  236 	ld	b, h
    000000F3 0A               [ 8]  237 	ld	a, (bc)
    000000F4 4F               [ 4]  238 	ld	c, a
    000000F5 06 00            [ 8]  239 	ld	b, #0x00
    000000F7 C5               [16]  240 	push	bc
    000000F8 11r44r01         [12]  241 	ld	de, #___str_8
    000000FB D5               [16]  242 	push	de
    000000FC CDr00r00         [24]  243 	call	_gprintf
    000000FF E8 04            [16]  244 	add	sp, #4
                                    245 ;src\pause.c:50: pause_menu();
    00000101 33               [ 8]  246 	inc	sp
    00000102 33               [ 8]  247 	inc	sp
    00000103 C3r2Ar00         [16]  248 	jp	_pause_menu
                                    249 ;src\pause.c:51: }
    00000106 33               [ 8]  250 	inc	sp
    00000107 33               [ 8]  251 	inc	sp
    00000108 C9               [16]  252 	ret
    00000109                        253 ___str_1:
    00000109 50 41 55 53 45         254 	.ascii "PAUSE"
    0000010E 00                     255 	.db 0x00
    0000010F                        256 ___str_2:
    0000010F 4C 45 56 45 4C 20 3A   257 	.ascii "LEVEL : %d"
             20 25 64
    00000119 00                     258 	.db 0x00
    0000011A                        259 ___str_3:
    0000011A 58 50 20 25 64         260 	.ascii "XP %d"
    0000011F 00                     261 	.db 0x00
    00000120                        262 ___str_4:
    00000120 20 2F 20 25 64         263 	.ascii " / %d"
    00000125 00                     264 	.db 0x00
    00000126                        265 ___str_5:
    00000126 53 54 41 54 53         266 	.ascii "STATS"
    0000012B 00                     267 	.db 0x00
    0000012C                        268 ___str_6:
    0000012C 41 74 74 61 63 6B 20   269 	.ascii "Attack   %d"
             20 20 25 64
    00000137 00                     270 	.db 0x00
    00000138                        271 ___str_7:
    00000138 44 65 66 65 6E 63 65   272 	.ascii "Defence  %d"
             20 20 25 64
    00000143 00                     273 	.db 0x00
    00000144                        274 ___str_8:
    00000144 53 70 65 65 64 20 20   275 	.ascii "Speed    %d"
             20 20 25 64
    0000014F 00                     276 	.db 0x00
                                    277 	.area _CODE
                                    278 	.area _INITIALIZER
                                    279 	.area _CABS (ABS)
